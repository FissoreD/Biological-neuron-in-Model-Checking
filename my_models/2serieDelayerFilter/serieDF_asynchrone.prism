dtmc

const int power = 3;
const double fuite = 0.9;
const int threshold_s1 = 10;
const int threshold_s2 = 7;
const int threshold_s3 = 6;
const int m = 100;


module transf2_3 = transf1_2 [z1=z2, to=to1, reset=reset1] endmodule
module transf1_2 
	z1: [0..1] init 0;
	[to] true -> (z1'=1);
	[reset] true -> (z1'=0);
endmodule

module S3 = S1 [s1=s3, pot_s1=pot_s3, s0=z2, threshold_s1=threshold_s3, to=to2, reset=reset2] endmodule
module S2 = S1 [s1=s2, pot_s1=pot_s2, s0=z1, threshold_s1=threshold_s2, to=to1, reset=reset1] endmodule

module S1

    s1 : [0..1] init 0;       // 0 = inactif et 1 = spike
    pot_s1 : [0..m] init 0; // potential of the neuron

    [to] s1=0 & pot_s1 <= threshold_s1 -> (pot_s1'=ceil(pot_s1 * fuite + s0 * power));
    [to] s1=0 & pot_s1 > threshold_s1 -> (s1'=1) & (pot_s1'=ceil(pot_s1 * fuite + s0 * power));
    [reset] s1=1 -> (s1' = 0) & (pot_s1' = 0);

endmodule

module initialisation
	s0 : [0..1] init 0;
	[to] s0=0 -> 1:(s0' = 1);
	[to] s0=1 -> 1:(s0' = 0);
endmodule


